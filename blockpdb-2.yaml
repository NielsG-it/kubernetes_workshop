# ConstraintTemplate definition
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8smaxunavailable
spec:
  crd:
    spec:
      names:
        kind: K8sMaxUnavailable
      validation:
        # OpenAPI v3 schema to validate parameters
        openAPIV3Schema:
          properties:
            maxUnavailable:
              type: integer
              default: 1
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8smaxunavailable

        violation[{"msg": msg}] {
          input.review.kind.kind == "PodDisruptionBudget"
          provided := input.review.object.spec.maxUnavailable
          provided > 1
          msg := sprintf("PodDisruptionBudget maxUnavailable is %v, must be <= 1", [provided])
        }

---
# Constraint definition
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sMaxUnavailable
metadata:
  name: maxunavailable-must-be-one
spec:
  match:
    kinds:
      - apiGroups: ["policy"]
        kinds: ["PodDisruptionBudget"]
